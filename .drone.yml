build:
  build:
    image: python:2
    commands:
      - echo "Build Phase"

publish:
  docker:
    repo: $$DOCKER_REPO
    tag: "$${BRANCH##feature/}"
    username: $$DOCKER_USERNAME
    password: $$DOCKER_PASSWORD
    email: $$DOCKER_EMAIL

notify:
  webhook:
    debug: true
    image: plugins/drone-webhook
    when:
      success: true
      failure: true
    method: POST
    header:
      Content-type: application/json; charset=utf-8
      Authorization: Bearer $$SPARK_TOKEN
    urls:
      - https://api.ciscospark.com/v1/messages
    template: |
      {
        "roomId": "$$SPARK_ROOM",
        {{#success build.status}}
        "text": "Repo {{repo.full_name}} - Drone confirms {{repo.full_name}} build {{build.number}} completed successfully.\nhttp://github.com/{{repo.full_name}}/commit/{{build.commit}}.\nhttp://$$DRONE_SERVER/{{repo.full_name}}/{{build.number}}."
        {{else}}
        "text": "Repo {{repo.full_name}} - Drone blames {{build.author}} for breaking build {{build.number}}.\nhttp://github.com/{{repo.full_name}}/commit/{{build.commit}}.\nhttp://$$DRONE_SERVER/{{repo.full_name}}/{{build.number}}."
        {{/success}}
      }

  spark:
    image: hpreston/drone-spark
    auth_token: $$SPARK_TOKEN
    roomId: $$SPARK_ROOM
    message: "Spark Plugin. Repo {{repo.full_name}} - Drone confirms {{repo.full_name}} build {{build.number}} completed successfully.\nhttp://github.com/{{repo.full_name}}/commit/{{build.commit}}.\nhttp://$$DRONE_SERVER/{{repo.full_name}}/{{build.number}}."
    when:
      success: true

    spark:
    image: hpreston/drone-spark
    auth_token: $$SPARK_TOKEN
    roomId: $$SPARK_ROOM
    message: "Spark Plugin. Repo {{repo.full_name}} - Drone blames {{build.author}} for breaking build {{build.number}}.\nhttp://github.com/{{repo.full_name}}/commit/{{build.commit}}.\nhttp://$$DRONE_SERVER/{{repo.full_name}}/{{build.number}}."
    when:
      success: false